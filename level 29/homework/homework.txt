3) რა არის inline და block-level ელემენტები?

Block-level ელემენტები:

ისინი იწყებენ ახალ ხაზს.
იკავებენ ხელმისაწვდომი სივრცის მთელ სიგანეს (100%-ს, თუ სხვა არ არის მითითებული).
Block-level ელემენტები გამოიყენება სტრუქტურისთვის, მაგალითად: <div>, <p>, <h1>–<h6>, <section>, <article> და ა.შ.
მათი შიგთავსი შეიძლება იყოს სხვა block-level ან inline ელემენტები.
Inline ელემენტები:

ისინი არ იწყებენ ახალ ხაზს.
იკავებენ მხოლოდ იმდენი სივრცეს, რამდენიც მათ შიგთავსს სჭირდება.
Inline ელემენტები ძირითადად გამოიყენება ტექსტის სტილისტიკისთვის, მაგალითად: <span>, <a>, <strong>, <em>, <img> და ა.შ.
მათში block-level ელემენტები არ შეიძლება ჩანდეს.
4) რა არის Box Model და რისთვის გამოიყენება?

CSS Box Model არის კონცეფცია, რომელიც აღწერს, თუ როგორ არის ელემენტები წარმოდგენილი სივრცეში ბრაუზერში. ის გამოიყენება ელემენტის საზღვრების, შიგთავსისა და სივრცის (padding/margin) სამართავად. Box Model-ის მეშვეობით ვაკონტროლებთ ელემენტის განლაგებას გვერდზე.

Box Model-ის კომპონენტები:

Content: ელემენტის შიგთავსი (ტექსტი, სურათი ან სხვა).
Padding: შიგთავსსა და საზღვარს (border) შორის დაშორება.
Border: ელემენტის საზღვარი, რომელიც ზღუდავს padding-სა და margin-ს.
Margin: ელემენტის გარე დაშორება სხვა ელემენტებთან.
5) Box Model-ის 4 layer:

Content:

ელემენტის რეალური შიგთავსი (მაგ., ტექსტი ან სურათი).
მისი ზომა რეგულირდება width და height ატრიბუტებით.
Padding:

Content-სა და Border-ს შორის სივრცე.
რეგულირდება padding პროპერტიით.
სარგებლობს ელემენტის ფერით ან ფონის სტილით.
Border:

ელემენტის გარე ხაზი, რომელიც სივრცეს ზღუდავს.
რეგულირდება border პროპერტიებით (მაგ., border-width, border-color, border-style).
Margin:

ელემენტსა და სხვა ელემენტებს შორის დაშორება.
რეგულირდება margin პროპერტიით.
