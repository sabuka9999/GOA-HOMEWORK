   1.    justify-content
განსაზღვრავს, როგორ განლაგდეს ელემენტები მთავარ ღერძზე (main axis).
მაგალითად:
        center: ელემენტები განლაგდება ცენტრში.
       flex-start: ელემენტები მარცხენა მხარეს (ან დასაწყისში).
       flex-end: ელემენტები მარჯვენა მხარეს (ან ბოლოში).
        space-between: ელემენტებს შორის სივრცე გადანაწილდება.
        space-around: სივრცე გადანაწილდება ელემენტებს შორის და მათ გარეთ.
    2.    align-items
განსაზღვრავს, როგორ განლაგდეს ელემენტები ჯვარედინ ღერძზე (cross axis).
მაგალითები:
        center: ყველა ელემენტი ცენტრში იქნება.
       flex-start: ელემენტები ზემოთ (ჯვარედინი ღერძის დასაწყისში).
        flex-end: ელემენტები ქვემოთ.
        stretch: ელემენტები ავტომატურად გაჭიმავს, რომ იკავონ მეტი სივრცე.
    3.    flex-direction
განსაზღვრავს, რომელ მიმართულებით განლაგდება ელემენტები მთავარ ღერძზე:
        row: მარცხნიდან მარჯვნივ (ნაგულისხმევი).
        row-reverse: მარჯვნიდან მარცხნივ.
        column: ზემოდან ქვემოთ.
        column-reverse: ქვემოდან ზემოთ.
    4.    flex-wrap
განსაზღვრავს, თუ როგორ მოიქცეს ელემენტები, როცა სივრცე არ ყოფნის:
        nowrap: ყველა ელემენტი ერთ ხაზზე დარჩება (ნაგულისხმევი).
        wrap: ელემენტები გადავა ახალ ხაზზე, თუ არ ეტევა.
        wrap-reverse: ელემენტები გადავა ახალ ხაზზე, მაგრამ უკუღმართი მიმართულებით.

 ეს თვისებები გეხმარება ელემენტების განლაგებაში, მიმართულებისა და სივრცის მართვაში.